function isInvalidEmail(t){return!/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(t)}const template=document.createElement("template");template.innerHTML="\n  <style>\n    .login {\n      width: 350px;\n      height: 420px;\n      padding: 50px 30px;\n      background: teal;\n      border: none;\n      box-shadow: 8px 0px 2px 1px gray;\n      position: relative;\n    }\n    .login--title {\n      font-wight: bold;\n    }\n    .login--content {\n      color: gray;\n      font-size: 18px;\n    }\n    .login--form {\n      height: 180px;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    }\n    .login--form--input {\n      display: block;\n      height: 30px;\n      font-size: 14px;\n      border: none;\n    }\n    .login--form--error {\n      display: none;\n      color: rgb(220, 0, 0);\n      font-size: 14px;\n      margin-top: -20px;\n      margin-bottom: -15px;\n    }\n    .login--form--input[error=\"true\"] ~ p {\n      display: block;\n    }\n    .login--form--button {\n      width: 100px;\n      height: 35px;\n      text-align: center;\n      outline: none;\n      border: none;\n      color: white;\n      font-size: 14px;\n      line-height: 35px;\n      background-color: #FE6856;\n      cursor: pointer;\n    }\n    .login--form--button:disabled {\n      background-color: gray;\n      cursor: not-allowed;\n    }\n    .login--form--bottom {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n    }\n  </style>\n  <div class='login'>\n    <h1 class='login--title'>Log In</h1>\n    <slot>\n      <p class='login--content'>Right at the coast of the Semantics, a large language ocean. A small river named Duden</p>\n    </slot>\n    <form class='login--form'>\n      <input class='login--form--input' autocomplete='off' name='email' type='text' placeholder='Email' />\n      <p class='login--form--error'>Email格式錯誤，請再次確認</p>\n      <input class='login--form--input' name='password' type='password' placeholder='Password' />\n      <input type='submit' class='login--form--button' value='Submit' disabled />\n    </form>\n    <svg class='login--form--bottom' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n      <path fill=\"#fff\" fill-opacity=\"1\" d=\"M0,224L14.1,229.3C28.2,235,56,245,85,240C112.9,235,141,213,169,218.7C197.6,224,226,256,254,266.7C282.4,277,311,267,339,229.3C367.1,192,395,128,424,117.3C451.8,107,480,149,508,181.3C536.5,213,565,235,593,250.7C621.2,267,649,277,678,272C705.9,267,734,245,762,218.7C790.6,192,819,160,847,128C875.3,96,904,64,932,53.3C960,43,988,53,1016,85.3C1044.7,117,1073,171,1101,176C1129.4,181,1158,139,1186,117.3C1214.1,96,1242,96,1271,96C1298.8,96,1327,96,1355,128C1383.5,160,1412,224,1426,256L1440,288L1440,320L1425.9,320C1411.8,320,1384,320,1355,320C1327.1,320,1299,320,1271,320C1242.4,320,1214,320,1186,320C1157.6,320,1129,320,1101,320C1072.9,320,1045,320,1016,320C988.2,320,960,320,932,320C903.5,320,875,320,847,320C818.8,320,791,320,762,320C734.1,320,706,320,678,320C649.4,320,621,320,593,320C564.7,320,536,320,508,320C480,320,452,320,424,320C395.3,320,367,320,339,320C310.6,320,282,320,254,320C225.9,320,198,320,169,320C141.2,320,113,320,85,320C56.5,320,28,320,14,320L0,320Z\">\n      </path>\n    </svg>\n  </div>\n";class CustomLoginForm extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(template.content.cloneNode(!0)),this.$container=this._shadowRoot.querySelector(".login"),this.$form=this._shadowRoot.querySelector("form"),this._shadowRoot.querySelectorAll('input:not([type="submit"])').forEach(t=>{t.addEventListener("input",t=>{const n=new FormData(this.$form),o=n.get("email"),e=n.get("password");this.$button.disabled=Boolean(!o||!e)})}),this._shadowRoot.querySelector('input[name="email"]').addEventListener("blur",t=>{t.target.setAttribute("error",isInvalidEmail(t.target.value))}),this.$button=this._shadowRoot.querySelector('input[type="submit"]'),this.$button.addEventListener("click",t=>{t.preventDefault();const n=new FormData(this.$form),o=n.get("email"),e=n.get("password");this.dispatchEvent(new CustomEvent("onSubmit",{detail:{email:o,password:e}}))})}connectedCallback(){this.hasAttribute("dark")&&(this.$container.style.background="rgba(17, 17, 17, 0.8)")}static get observedAttributes(){return["content"]}get content(){return this.getAttribute("content")}set content(t){this.setAttribute("content",t)}}window.customElements.define("custom-loginform",CustomLoginForm);